{% extends 'base.html.twig' %}

{% block title %}Articles{% endblock %}
{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('styles/app.css') }}">
{% endblock %}

{% block body %}

{{ render(controller('App\\Controller\\NavbarController::navbar')) }}

<div class="container mx-auto py-6">
    <div class="flex justify-center space-x-4 mb-6">
        <button onclick="window.location.href='{{ path('app_library') }}'" class="bg-white/45 text-gray-700 backdrop-blur-sm shadow-lg flex-grow px-4 py-2 rounded-lg font-medium hover:bg-gray-200/45 focus:outline-none focus:ring-2 focus:ring-gray-400 active:bg-gray-400">Auteurs</button>
        <button class="bg-blue-600 text-white flex-grow px-4 py-2 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 active:bg-blue-900">Articles</button>
        <button onclick="window.location.href='{{ path('app_library_books') }}'" class="bg-white/45 text-gray-700 backdrop-blur-sm shadow-lg flex-grow px-4 py-2 rounded-lg font-medium hover:bg-gray-200/45 focus:outline-none focus:ring-2 focus:ring-gray-400 active:bg-gray-400">Livres</button>
    </div>

    <div class="bg-white/45 backdrop-blur-sm shadow-xl flex flex-wrap p-6 rounded-lg">
        {% if app.user and app.user.userType == 1 %}
            <div class="w-full flex justify-end mb-4">
                <button class="inline-block px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition" onclick="openArticleCreateModal()">Ajouter un article</button>
            </div>
        {% endif %}
        <div class="flex flex-row w-full">
            <h3 class="w-1/2">Titre</h3>
            <h3>Auteur</h3>
            {% if app.user and app.user.userType == 1 %}
                <h3 class="w-24"></h3>
            {% endif %}
        </div>
        <tbody>
            {% for article in articles %}
            <div class="relative bg-white hover:bg-blue-50 flex flex-row rounded-lg w-full my-1 p-3 items-center">
                <a href="{{ article.link }}" target="_blank" class="w-1/2">{{ article.title }}</a>
                <p class="flex-1">{{ article.author }}</p>
                {% if app.user and app.user.userType == 1 %}
                    <div class="absolute top-2 right-2 flex flex-col items-end space-x-1">
                        {# Dropdown button #}
                        <button id="crudDropdownButton{{ article.id }}" class="focus:outline-none px-2 py-1">
                            &#9776;
                        </button>
                        {# Dropdown menu #}
                        <div id="crudDropdownMenu{{ article.id }}" class="hidden flex flex-col items-end mt-2 bg-white rounded overflow-auto shadow-lg z-50">
                            <button onclick="openArticleEditModal({{ article.id }})" class="block px-2 py-1 w-full text-gray-700 hover:bg-gray-100">Modifier</button>
                            <form method="post" action="{{ path('app_article_delete', {'id': article.id}) }}" onsubmit="return confirm('Voulez-vous vraiment supprimer cet auteur ?');" class="w-full">
                                <input type="hidden" name="_token" value="{{ csrf_token('delete_article_' ~ article.id) }}">
                                <button type="submit"
                                        class="bg-white hover:bg-gray-100 text-red-600 w-full px-2 py-1 transition"
                                        title="Supprimer">
                                    Supprimer
                                </button>
                            </form>
                        </div>
                    </div>
                {% endif %}
            </div>
            {% endfor %}
        </tbody>
    </div>
</div>
<script>    
    const dropdownButtons = document.querySelectorAll('[id^="crudDropdownButton"]');
    const dropdownMenus = document.querySelectorAll('[id^="crudDropdownMenu"]');

    dropdownButtons.forEach((button) => {
        const menuId = button.id.replace('crudDropdownButton', 'crudDropdownMenu');
        const menu = document.getElementById(menuId);

        if (menu) {
            button.addEventListener('click', (event) => {
                event.stopPropagation();

                // Close all other menus
                dropdownMenus.forEach((otherMenu) => {
                    if (otherMenu !== menu) {
                        otherMenu.classList.add('hidden');
                    }
                });

                // Toggle the clicked menu
                menu.classList.toggle('hidden');
            });

            // Close the dropdown if clicked outside
            document.addEventListener('click', (event) => {
                if (!button.contains(event.target) && !menu.contains(event.target)) {
                    menu.classList.add('hidden');
                }
            });
        }
    });
</script>

{% include 'modals/_article_create_modal.html.twig' with {'form': createForm} %}
{% include 'modals/_article_edit_modal.html.twig' with {'form': editForm} %}

{% endblock %}